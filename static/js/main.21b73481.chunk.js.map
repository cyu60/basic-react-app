{"version":3,"sources":["components/UserInput.js","components/UserOutput.js","components/ValidationComponent.js","components/CharComponent.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","props","type","onChange","change","value","className","UserOutput","text","validationComponent","output","length","charComponent","showOutput","map","char","index","id","onClick","removeChar","style","display","App","useState","updateText","longEnough","event","target","ValidationComponent","CharComponent","console","log","innerText","charText","splice","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAWeA,G,WARG,SAACC,GACf,OACI,8BACI,uBAAOC,KAAK,OAAOC,SAAUF,EAAMG,OAAQC,MAAOJ,EAAMI,MAAOC,UAAU,kBCMtEC,EAVI,SAACN,GAChB,OACI,qBAAKK,UAAU,aAAf,SACI,4BAAIL,EAAMO,UCWPC,EAda,SAACR,GAGzB,IAAIS,EAAST,EAAMO,KAAKG,QAAU,GAAK,2EAA+C,qEACtF,OACI,sBAAKL,UAAU,sBAAf,UACI,+CAAkBL,EAAMO,KAAKG,OAA7B,oBACA,4BAAID,QCODE,EAbO,SAACX,GACnB,GAAIA,EAAMY,WACN,OACI,sBAAKP,UAAU,gBAAf,UACI,qBAAKA,UAAU,OAAf,SAEC,YAAIL,EAAMO,MAAMM,KAAI,SAACC,EAAMC,GAAP,OAAiB,mBAAeC,GAAID,EAAOE,QAASjB,EAAMkB,WAAYC,MAAO,CAACC,QAAS,UAAtE,SAAkFN,GAA1EC,QAE9C,+ECiDDM,EApDH,WAAO,IAAD,EACWC,mBAAS,UADpB,mBACTf,EADS,KACHgB,EADG,OAEmBD,oBAAS,GAF5B,mBAETV,EAFS,KA+BZY,GA/BY,KA+BCjB,EAAKG,QAAU,GAGhC,OACE,qBAAKL,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,yEACA,cAAC,EAAD,CAAWF,OAlCO,SAACsB,GACvBF,EAAWE,EAAMC,OAAOtB,QAiCgBA,MAAOG,IAC3C,cAACoB,EAAD,CAAqBpB,KAAMA,EAAMiB,WAAYA,IAC7C,cAACI,EAAD,CAAerB,KAAMA,EAAMW,WAhCd,SAACO,GAClBI,QAAQC,IAAIL,EAAMC,OAAOK,WACzBF,QAAQC,IAAIL,EAAMC,OAAOV,IACzB,IAAMD,EAAQU,EAAMC,OAAOV,GAGrBgB,EAAQ,YAAOzB,GACrByB,EAASC,OAAOlB,EAAO,GAKvBQ,EAAWS,EAASE,KAAK,MAoB8BtB,WAAYA,IAC/D,cAAC,EAAD,CAAYL,KAAMA,IAClB,cAAC,EAAD,CAAYA,KAAMA,IAClB,cAAC,EAAD,CAAYA,KAAMA,IAClB,cAAC,EAAD,CAAYA,KAAMA,IAClB,cAAC,EAAD,CAAYA,KAAMA,UCzCX4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.21b73481.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\n\nconst UserInput = (props) => {\n    return (\n        <div>\n            <input type='text' onChange={props.change} value={props.value} className=\"UserInput\"></input>\n        </div>\n    );\n}\n\nexport default UserInput;\n","import React from 'react';\n\nconst UserOutput = (props) => {\n    return (\n        <div className=\"UserOutput\">\n            <p>{props.text}</p>\n            {/* <p>{props.text.length}</p> */}\n            {/* <p>Test</p> */}\n        </div>\n    );\n}\n\nexport default UserOutput;\n","import React from 'react';\n\nconst validationComponent = (props) => {\n    // console.log(props)\n    // let output = props.longEnough ? 'Text too short' : 'Text long enough'\n    let output = props.text.length <= 45 ? 'Text too short... Not evil enough...ðŸ˜‘ðŸ˜‘ðŸ˜‘' : 'Text long enough... MuwahahahaðŸ™ŒðŸ™ŒðŸ™Œ'\n    return (\n        <div className=\"validationComponent\">\n            <p>Your text has {props.text.length} characters...</p>\n            <p>{output}</p>\n            {/* <p>{props.text.length}</p> */}\n            {/* <p>Test</p> */}\n        </div>\n    );\n}\n\nexport default validationComponent;\n","import React from 'react';\nimport './User.css';\n\nconst charComponent = (props) => {\n    if (props.showOutput)\n        return (\n            <div className=\"charComponent\">\n                <div className=\"card\">\n                {/* Is the id or the key a potential issue herer? */}\n                {[...props.text].map((char, index) => <p key={index} id={index} onClick={props.removeChar} style={{display: 'inline'}}>{char}</p>)}\n                </div>\n                <p>Click on the letters above to remove them!</p>\n            </div>\n        );\n}\n\nexport default charComponent;\n","import {useState} from 'react';\nimport './App.css';\n\nimport UserInput from './components/UserInput';\nimport UserOutput from './components/UserOutput';\nimport ValidationComponent from './components/ValidationComponent';\nimport CharComponent from './components/CharComponent';\n\nconst App = () => {\n  const [text, updateText] = useState('Chinat');\n  const [showOutput, updateOutput] = useState(true);\n\n  const onChangeHandler = (event) => {\n    updateText(event.target.value);\n  }\n\n  const removeChar = (event) => {\n    console.log(event.target.innerText);\n    console.log(event.target.id);\n    const index = event.target.id;\n    // Check the key?\n    // console.log(event);\n    const charText = [...text];\n    charText.splice(index, 1); // Returns the removed el!!\n\n    // console.log(text);\n    // console.log([...text]);\n    // console.log([...text].splice(index, 1));\n    updateText(charText.join(\"\"))\n  } \n\n  // Function has some issues?\n  // const checkOutput = () => {\n  //   console.log('output is checked')\n  //   let longEnough = text.length <= 5;\n  //   updateOutput(longEnough);\n  //   return longEnough;\n  // }\n\n  let longEnough = text.length <= 5;\n  // updateOutput(longEnough);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ðŸ¤– The Evil Text Generator!!!</h1>\n        <UserInput change={onChangeHandler} value={text}></UserInput>\n        <ValidationComponent text={text} longEnough={longEnough}/>\n        <CharComponent text={text} removeChar={removeChar} showOutput={showOutput}/>\n        <UserOutput text={text}/>\n        <UserOutput text={text}/>\n        <UserOutput text={text}/>\n        <UserOutput text={text}/>\n        <UserOutput text={text}/>\n        {/* checkOutput={() => checkOutput()} */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}